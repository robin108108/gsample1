/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  GymService as PrismaGymService,
  Gym as PrismaGym,
} from "@prisma/client";

export class GymServiceServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.GymServiceCountArgs, "select">
  ): Promise<number> {
    return this.prisma.gymService.count(args);
  }

  async gymServices<T extends Prisma.GymServiceFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.GymServiceFindManyArgs>
  ): Promise<PrismaGymService[]> {
    return this.prisma.gymService.findMany<Prisma.GymServiceFindManyArgs>(args);
  }
  async gymService<T extends Prisma.GymServiceFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.GymServiceFindUniqueArgs>
  ): Promise<PrismaGymService | null> {
    return this.prisma.gymService.findUnique(args);
  }
  async createGymService<T extends Prisma.GymServiceCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.GymServiceCreateArgs>
  ): Promise<PrismaGymService> {
    return this.prisma.gymService.create<T>(args);
  }
  async updateGymService<T extends Prisma.GymServiceUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.GymServiceUpdateArgs>
  ): Promise<PrismaGymService> {
    return this.prisma.gymService.update<T>(args);
  }
  async deleteGymService<T extends Prisma.GymServiceDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.GymServiceDeleteArgs>
  ): Promise<PrismaGymService> {
    return this.prisma.gymService.delete(args);
  }

  async getGym(parentId: string): Promise<PrismaGym | null> {
    return this.prisma.gymService
      .findUnique({
        where: { id: parentId },
      })
      .gym();
  }
}
