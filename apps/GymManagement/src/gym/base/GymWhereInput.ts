/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { GymEquipmentListRelationFilter } from "../../gymEquipment/base/GymEquipmentListRelationFilter";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { GymServiceListRelationFilter } from "../../gymService/base/GymServiceListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { JsonFilter } from "../../util/JsonFilter";
import { FloatNullableFilter } from "../../util/FloatNullableFilter";

@InputType()
class GymWhereInput {
  @ApiProperty({
    required: false,
    type: () => GymEquipmentListRelationFilter,
  })
  @ValidateNested()
  @Type(() => GymEquipmentListRelationFilter)
  @IsOptional()
  @Field(() => GymEquipmentListRelationFilter, {
    nullable: true,
  })
  gymEquipments?: GymEquipmentListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => GymServiceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => GymServiceListRelationFilter)
  @IsOptional()
  @Field(() => GymServiceListRelationFilter, {
    nullable: true,
  })
  gymServices?: GymServiceListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  location?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  name?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: JsonFilter,
  })
  @Type(() => JsonFilter)
  @IsOptional()
  @Field(() => JsonFilter, {
    nullable: true,
  })
  payments?: JsonFilter;

  @ApiProperty({
    required: false,
    type: FloatNullableFilter,
  })
  @Type(() => FloatNullableFilter)
  @IsOptional()
  @Field(() => FloatNullableFilter, {
    nullable: true,
  })
  pricePerDay?: FloatNullableFilter;
}

export { GymWhereInput as GymWhereInput };
